#!/usr/bin/env bash

if [ -z "$XDG_CONFIG_HOME" ]; then
    echo "no xdg config home"
    echo "using ~/.config"
    XDG_CONFIG_HOME=$HOME/.config
fi

if [ -z "$DEV_ENV" ]; then
    echo "env var DEV_ENV needs to be present"
    exit 1
fi

script_dir=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
dry="0"

while [[ $# > 0 ]]; do
    if [[ $1 == "--dry" ]]; then
        dry="1"
    else
        filter="$1"
    fi
    shift
done

log() {
    if [[ $dry == "1" ]]; then
        echo "[DRY_RUN]: $@"
    else
        echo "$@"
    fi
}

execute() {
    log "execute $@"
    if [[ $dry == "1" ]]; then
        return
    fi
    "$@"
}

log "------------------- dev-env ---------------------"

copy_dir() {
    from=$1
    to=$2

    pushd $from > /dev/null
    dirs=$(find . -mindepth 1 -maxdepth 1 -type d)
    for dir in $dirs; do
        # Skip the git folder
        if [[ $(basename $dir)  == ".git" ]]; then
            continue
        fi
        execute rm -rf $to/$dir
        execute cp -r $dir $to/$dir
    done
    popd > /dev/null
}

copy_file() {
    from=$1
    to=$2
    name=$(basename $from)

    execute rm $to/$name
    execute cp -r $from $to/$name
}

copy_dir .config $XDG_CONFIG_HOME
copy_dir .local $HOME/.local
copy_dir $DEV_ENV/env/.local/scripts/tmux-sessionizer $HOME/.local/scripts/tmux-sessionizer
copy_dir $DEV_ENV/.zshrc $HOME/.zshrc
copy_dir $DEV_ENV/.gitconfig $HOME/.gitconfig
copy_dir $DEV_ENV/dev-env $HOME/.local/scripts/dev-env


